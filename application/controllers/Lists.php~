<?php
class Lists extends CI_Controller {

		public function __construct()
		{
				parent::__construct();
				$this->load->model('lists_model');
		}
	
		public function index()
		{
				$data['QuestionLists'] = $this->Lists_model->get_QuestionLists();
				$data['title'] = 'Lists archive';
				
				$this->load->view('templates/header', $data);
				$this->load->view('lists/index', $data);
				$this->load->view('templates/footer');
		}
	
		public function view($qid = NULL)
		{
				$this->load->helper('form');
				$this->load->library('form_validation');			
			
				$data['questions_item'] = $this->questions_model->get_questions($qid);
				
				if (empty($data['questions_item']))
				{
						//	show_404();
				}
				
				//Add the answers to the data array
				$data['questions_item']['answers'] = $this->questions_model->get_answers($qid, $data['questions_item']['Type']);			
				 
			
				$data['title'] = $data['questions_item']['Contents'];
				
				$this->load->view('templates/header', $data);
				$this->load->view('lists/view', $data);
				$this->load->view('templates/footer');
		}
	
		/*
			Loads a form to create an empty list in the database 
		*/
		public function makelist()
		{
				$this->load->helper('form');
				$this->load->library('form_validation');
				$this->load->model('questions_model');
				
				$data['title'] = 'Create a question';
				$data['genericsets'] = $this->questions_model->get_GenericAnswerSets();
				
				$this->form_validation->set_rules('ListName', 'list name', 'required');
//				$this->form_validation->set_rules('text', 'text', 'required');
				
				if ($this->form_validation->run() === FALSE)
				{
					$this->load->view('templates/header', $data);
					$this->load->view('lists/create', $data);
					$this->load->view('templates/footer');
				}
				else
				{
					$this->questions_model->set_QuestionList();
					$this->load->view('lists/success');
				}
		}
	
		public function addtolist($qid = NULL)
		{
				$this->load->helper('form');
				$this->load->library('form_validation');			
			
				$data['questions_item'] = $this->questions_model->get_questions($qid);
				
				if (empty($data['questions_item']))
				{
						show_404();
				}
				
				//Add the answers to the data array
				$data['questions_item']['answers'] = $this->questions_model->get_answers($qid, $data['questions_item']['Type']);			
				$data['questionlists'] = $this->lists_model->get_QuestionLists();			
				 
			
				$data['title'] = $data['questions_item'];//['Contents'];
				
				$this->form_validation->set_rules('answer', 'set answer', 'required');
				$this->form_validation->set_rules('pointvalue', 'point value', 'required');
				$this->form_validation->set_rules('listlist', 'list selection', 'required');
				
				if ($this->form_validation->run() === FALSE)
				{
					$this->load->view('templates/header', $data);
					$this->load->view('lists/add', $data);
					$this->load->view('templates/footer');
				}
				else
				{
					$this->questions_model->set_QuestionListItem($qid);
					$this->load->view('lists/success');
				}
			
		}
}
?>